.\"
.\"     %A%
.\"
.Dd September 17, 2007
.Dt RGREP 1
.Os MASTODON
.Sh NAME
.Nm rgrep
.Nd recursive grep
.Sh SYNOPSIS
.Nm
.Op Ar flags
.Ar pattern
.Ar path ...
.Sh DESCRIPTION
.Nm
recursively searches files in the named paths (or searches stdin if
no arguments are given) for lines containing the given
.Ar pattern .
.Pp
Like the more-traditional grep, it has many options that change
how it works, but many of these options are subtly different:
.Bl -tag -width Fl
.It Li -c
Count matches;  don't print the lines that contain the patterns,
just the matches.
.It Li -e
Use POSIX-style regular expressions.
.It Li -h
When displaying lines that matches, highlight the text that matches the pattern.
.It Li -H
Don't display lines that match the pattern, display the text
that matches the pattern.
.It Li -i
Ignore case.
.It Li -l
Print the name of each file that contains a the pattern.
.It Li -n
As well as the line, print the line number of each line
that matches the pattern.
.It Li -F
Follow links.
.It Li -r
Recursively scan through directories (this is the default.)
.It Li -N
Don't recurse.   This makes
.Nm
into a somewhat clumsy superslow grep.
.It Li -R Ar pat
Search only filenames that match 
.Ar pat .
.It Li -v
Print (count) only lines that do NOT contain the pattern.
.It Li -x Ar pat
Search only filenames that have the extension
.Ar pat .
.It Li -D
Instead of searching, just print the names of the directories that
would be searched.    (This makes
.Nm
into a somewhat slower version of 
.Xr find 1 )
.It Li -W Ar len
Input files contain fixed-length records
.Ar len
characters long.
.El
The regular expression format that
.Nm
uses is a slightly extended version of the "basic" regular expressions
used in Henry Spencer's regex library.  Regular expressions are made
up of plain text, plus the following special characters:
.Bl -tag -width Fl
.It Li \.
Match any single character except newlines.
.It Li \e Ns d
Match any digit.
.It Li \e Ns e
Match the ESCAPE character.
.It Li *
Match zero or more of the previous RE.
.It Li +
Match one or more of the previous RE.
.It Li ?
Match zero or one of the previous RE.
.It Li ^
Match beginning of line.
.It Li $
Match end of line.
.It Li [ Ns Ar ... Ns Li ]
Matches any single character between the brackets.  As special cases,
a leading
.Li ^
means match everything EXCEPT the characters between the branches,
and a
.Li -
between two characters means to match any character between those
two (so
.Ar [a-z]
would mean to match any lowercase character, and
.Ar [0-9]
would match any single digit.
.It Li \e Ns <
Match the beginning of a word.
.It Li \e Ns >
Match the end of a word.
.It Li \e{ Ar num Li \e}
Match 
.Ar num
instances of the previous RE.
.It Li \e( Ar RE Li \e)
Match RE as a subexpression.
.It Li \e Ns Ar <digit>
Match what was matched by the <digit>'th \e Ns ( RE \e Ns ) subexpression.
.El
.Sh BUGS
1. The
.Li \e Ns d
metacharacter is not implemented.
.br
2. The
.Li \e{ Ar ... Li \e}
command is not fully implemented.
.Sh AUTHOR
David Parsons (<orc@pell.portland.or.us>)
.br
The regular expression code is Henry Spencer's regex code (modified to support 
.Ar \e< ,
.Ar \e> ,
.Ar \ee ,
.Ar ? ,
and
.Ar + Ns \.)
.Sh COPYRIGHT
.Nm
is Copyright 2007 by David Parsons.
.br
The regex library is Copyright 1992, 1993, 1994, 1997 Henry Spencer.
.Sh SEE ALSO
.Xr grep 1 ,
.Xr re_format 7
.Sh HISTORY
A version of the
.Nm
command is distributed with John Davis's 
.Xr jed 8
editor.
